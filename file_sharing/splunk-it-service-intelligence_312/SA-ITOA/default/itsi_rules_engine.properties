# Period to fetch policy from kv store (in sec)
policy_fetch_period = 45

# The number of sub-groups that can be created for an aggregation policy with
# split by fields. If you exceed this limit, you will break all sub-groups
# that exist for an aggregation policy.
sub_group_limit = 10000

# Group index name
index_name = itsi_grouped_alerts

# Http token name
token_name = itsi_group_alerts_token

# Http sync token
# NOTE - if both sync and the other token are same, a token with async functionality is created.
sync_token_name = itsi_group_alerts_sync_token

# Time out to check if http event is being indexed (in secs)
http_ack_time_out = 10

# Default source
default_source = itsi_group_alerts

# Default sourcetype
default_sourcetype = stash

# The number of events that can be contained in the parent group, which includes
# all sub-groups for an aggregation policy with split by fields. If you exceed this
# limit, you will break all sub-groups that exist for an aggregation policy.
max_event_in_parent_group = 100000000

# The number of events that can be contained in a single sub-group for an aggregation
# policy with split by fields. If you exceed this limit you will break the sub-group.
max_event_in_group = 10000

# An ACK token ensures that an event is being indexed before running an action on it.
# However, events are forwarded to the indexer from the search head, which adds another delay.
# This field (in milliseconds) adds an additional delay before running an action on events or groups.
action_execution_delay = 0

# Time stamp inaccuracies in the processed search results when event are milliseconds apart (in secs)
earliest_time_lag = 300
