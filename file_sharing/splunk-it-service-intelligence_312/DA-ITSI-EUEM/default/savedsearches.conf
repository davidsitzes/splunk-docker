[DA-ITSI-EUEM_kpi_entity]
description = Search for discovering various EUEM KPI fields
search = | tstats values(Inventory.package_name) as package_name from datamodel=EUEM.Inventory BY Inventory.platform, Inventory.app_environment, Inventory.application_id, Inventory.role | mvexpand package_name | `euem_get-application_title(package_name,'Inventory.platform','Inventory.app_environment')` | dedup Inventory.application_id, application_title | rename Inventory.platform as platform, Inventory.application_id as application_id, Inventory.app_environment as app_environment, Inventory.role as itsi_role | fields + package_name, platform, application_id, app_environment, application_title, itsi_role
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-----------------------------------#
# DrillDown: Applicaton Inventory   #
#-----------------------------------#
[DA-ITSI-EUEM_Application_Inventory]
description = Inventory of Application Instances
search = tag=euem tag=inventory application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | stats values(platform) as Platform,  values(app_version_name) as AppVersion, values(os_version) as OsVersion, values(Country) as Country, values(Region) as Region, values(City) as City, values(device) as Device, values(carrier) as Carrier, values(connection) as Connection | fields + Platform
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : User       #
#-------------------------#
[DA-ITSI-EUEM_Unique_Users_By_Platform]
description = Unique Users search by platform
search = `euem_get_unique_user_count(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_Carrier]
description = Unique Users search by carrier
search = `euem_get_unique_user_count(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_Connection]
description = Unique Users search by connection type
search = `euem_get_unique_user_count(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_Country]
description = Unique Users search by country
search = tag=euem application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart dc(uuid) as "Unique Users" by Country
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_Device]
description = Unique Users search by device
search = `euem_get_unique_user_count(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_App_Version]
description = Unique Users search by application version
search = `euem_get_unique_user_count(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Unique_Users_By_Os_Version]
description = Unique Users search by os version
search = `euem_get_unique_user_count(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search


#-------------------------#
# MINICHARTS : PageLoad   #
#-------------------------#
[DA-ITSI-EUEM_Pageload_By_Platform]
description = Page load in msec search by platform
search = `euem_get_pageload_time(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_Carrier]
search = `euem_get_pageload_time(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_Connection]
search = `euem_get_pageload_time(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_Country]
search = tag=euem tag=performance application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart avg(dom_processing_time) as "Average Page Load Time" by Country
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_Device]
search = `euem_get_pageload_time(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_App_Version]
search = `euem_get_pageload_time(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Pageload_By_Os_Version]
search = `euem_get_pageload_time(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : Sessions   #
#-------------------------#
[DA-ITSI-EUEM_Sessions_By_Platform]
search =  `euem_get_unique_sessions_count(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_Carrier]
search =  `euem_get_unique_sessions_count(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_Connection]
search =  `euem_get_unique_sessions_count(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_Country]
search = tag=euem application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart dc(session_id) as "Session Count" by Country
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_Device]
search =  `euem_get_unique_sessions_count(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_App_Version]
search =  `euem_get_unique_sessions_count(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Sessions_By_Os_Version]
search =  `euem_get_unique_sessions_count(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : Session Duration  #
#-------------------------#
[DA-ITSI-EUEM_Session_Duration_By_Platform]
search =  `euem_get_session_duration(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_Carrier]
search =  `euem_get_session_duration(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_Connection]
search =  `euem_get_session_duration(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_Country]
search = tag=euem application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart avg(ses_duration) as "Session Length" by Country
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_Device]
search =  `euem_get_session_duration(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_App_Version]
search =  `euem_get_session_duration(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Session_Duration_By_Os_Version]
search =  `euem_get_session_duration(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#------------------------------#
# MINICHARTS : Network Latency #
#------------------------------#
[DA-ITSI-EUEM_Network_Latency_By_Platform]
search =  `euem_get_network_latency(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_Carrier]
search =  `euem_get_network_latency(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_Connection]
search =  `euem_get_network_latency(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_Country]
search = tag=euem tag=performance application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart avg(latency) as "Average Network latency" by Country
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_Device]
search =  `euem_get_network_latency(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_App_Version]
search =  `euem_get_network_latency(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Latency_By_Os_Version]
search =  `euem_get_network_latency(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#------------------------------#
# MINICHARTS : Http Error Rate #
#------------------------------#
[DA-ITSI-EUEM_HTTP_Error_Rate_By_Platform]
search =  `euem_get_http_error_rate(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_Carrier]
search =  `euem_get_http_error_rate(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_Connection]
search =  `euem_get_http_error_rate(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_Country]
search = tag=euem tag=performance application_id="$application_id$" status_code=* | `euem_get_geolocation(remote_ip)` | bucket _time span=1h | eventstats count(eval(status_code>299)) as ErrorCount, count(eval(status_code>=0)) as Total by _time, Country | fillnull ErrorCount, Total | `evaluate_percentage(HTTPErrorRate, ErrorCount, Total)` | timechart avg(HTTPErrorRate) by Country span=1h
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_Device]
search =  `euem_get_http_error_rate(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_App_Version]
search =  `euem_get_http_error_rate(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_HTTP_Error_Rate_By_Os_Version]
search =  `euem_get_http_error_rate(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : Network    #
#-------------------------#
[DA-ITSI-EUEM_Network_Error_Rate_By_Platform]
search =  `euem_get_network_error_rate(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_Carrier]
search =  `euem_get_network_error_rate(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_Connection]
search =  `euem_get_network_error_rate(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_Country]
search = tag=euem tag=performance application_id="$application_id$" status_code=* exception=* | `euem_get_geolocation(remote_ip)` | bucket _time span=1h | eventstats count(eval(exception!="NA")) as ErrorCount, count(eval(status_code>=0)) as Total by _time, Country | fillnull ErrorCount, Total | `evaluate_percentage(NetworkErrorRate, ErrorCount, Total)` | timechart avg(NetworkErrorRate) by Country span=1h
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_Device]
search =  `euem_get_network_error_rate(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_App_Version]
search =  `euem_get_network_error_rate(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Network_Error_Rate_By_Os_Version]
search =  `euem_get_network_error_rate(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : Crash Rate #
#-------------------------#
[DA-ITSI-EUEM_Crash_Rate_By_Platform]
search =  `euem_get_crash_rate(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_Carrier]
search =  `euem_get_crash_rate(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_Connection]
search =  `euem_get_crash_rate(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_Country]
search = tag=euem application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | bucket _time span=1h | eventstats count(eval(handled="false")) as CrashCount, dc(session_id) as Total by _time, Country | fillnull CrashCount, Total | `evaluate_percentage(CrashRate, CrashCount, Total)` | timechart avg(CrashRate) by Country span=1h
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_Device]
search =  `euem_get_crash_rate(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_App_Version]
search =  `euem_get_crash_rate(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Crash_Rate_By_Os_Version]
search =  `euem_get_crash_rate(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search


#---------------------------#
# MINICHARTS : Transactions #
#---------------------------#
[DA-ITSI-EUEM_Transaction_Error_Rate_By_Platform]
search =  `euem_get_transaction_error_rate(platform, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_Carrier]
search =  `euem_get_transaction_error_rate(carrier, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_Connection]
search =  `euem_get_transaction_error_rate(connection, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_Country]
search = tag=euem tag=performance application_id="$application_id$" | `euem_get_geolocation(remote_ip)` | timechart count(eval(status="ERROR")) as Error, count as Total by Country | `euem_get-rate(Error, Total)` | rename percentage as "Transaction Error Rate"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_Device]
search =  `euem_get_transaction_error_rate(device, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_App_Version]
search =  `euem_get_transaction_error_rate(app_version_name, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-EUEM_Transaction_Error_Rate_By_Os_Version]
search =  `euem_get_transaction_error_rate(os_version, $application_id$)`
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#-------------------------#
# MINICHARTS : Events     #
#-------------------------#


#-------------------------#
# MINICHARTS : App Usage  #
#-------------------------#
