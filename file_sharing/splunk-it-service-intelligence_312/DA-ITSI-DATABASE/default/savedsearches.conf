[DA-ITSI-DATABASE-Database_Instances_Search]
description = Search for discovering Database Instances
search =  tag=database tag=inventory\
          | eval instance_role="database_instance"\
          | stats latest(host) as host,\
           latest(instance_role) as itsi_role,\
           latest(vendor) as vendor,\
           latest(vendor_product) as vendor_product,\
           latest(version) as version,\
           latest(port) as port,\
           latest(storage_engine) as storage_engine,\
           latest(availability) as availability,\
           latest(character_set) as character_set,\
           latest(collation) as collation,\
           by database_instance\
           | fields + database_instance, host, itsi_role, vendor, vendor_product, version, port, storage_engine, availability, character_set, collation
dispatch.earliest_time = -4h
dispatch.latest_time = now
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Inventory]
description = Inventory of Database Instances
search = database_instance="$database_instance$" tag=database tag=inventory (host=* OR vendor_product=* OR version=* OR character_set=* OR collation=*) | stats latest(host) as Host, latest(vendor_product) as Product, latest(version) as Version, latest(character_set) as Charset, latest(collation) as Collation
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Databases]
search = database_instance="$database_instance$" tag=database tag=performance | stats latest(eval(round(current_size,2))) as "Database Size (MB)" by database_name | rename database_name as "Database Name"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Table]
search = database_instance="$database_instance$" tag=database tag=performance tag=table (table_name=* OR last_update_time=* OR row_count=* OR size=*) | eval size=round(size, 2) | stats latest(database_name) as "Database", latest(last_update_time) as "Last Update", latest(row_count) as "Rows Count", latest(size) as "Size (MB)" by table_name | rename table_name as Table
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Top_Queries]
search = database_instance="$database_instance$" tag=database tag=performance tag=query (query=* OR response_time=*) | table query, response_time | sort 20 -response_time |rename query as Query, response_time as "Response Time (ms)"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Queries_Details]
search = database_instance="$database_instance$" tag=database tag=performance tag=query (query_id=* OR query=* OR response_time=* OR query_type=* OR user=*) | table query_id, query, response_time, query_type, user | rename query_id as "Query Id", query as Query, response_time as "Response Time (ms)", query_type as "Query Type", user as User
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Queries_Type]
search = database_instance="$database_instance$" tag=database tag=performance tag=query (query_type=* OR response_time=*) | stats count as "Total Count", avg(response_time) as average, max(response_time) as max by query_type | rename query_type as "Query Type" | eval "Average Response Time (ms)" = round(average, 2) | eval "Max Response Time (ms)" = round(max, 2) | fields - average, max
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Performance_Transaction_Rate]
search = database_instance="$database_instance$" tag=database tag=performance transaction_rate=* | timechart eval(round(avg(transaction_rate), 2)) as "Transactions/sec"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Performance_Deadlock_Rate]
search = database_instance="$database_instance$" tag=database tag=performance deadlock_rate=* | timechart eval(round(avg(deadlock_rate), 2)) as "Deadlocks/sec"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Performance_Storage_Read_IOPS]
search = database_instance="$database_instance$" tag=database tag=performance instance_read_iops=* | timechart eval(round(avg(instance_read_iops), 2)) as "Storage Read IOs/sec"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Performance_Storage_Write_IOPS]
search = database_instance="$database_instance$" tag=database tag=performance instance_write_iops=* | timechart eval(round(avg(instance_write_iops), 2)) as "Storage Write IOs/sec"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Performance_Error_Rate]
search = database_instance="$database_instance$" tag=database tag=performance error_rate=* | timechart eval(round(avg(error_rate), 2)) as "Errors/sec"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Network_Connections]
search = database_instance="$database_instance$" tag=database tag=performance connections=* | timechart eval(round(avg(connections), 2)) as "Connections"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Network_Connection_Pool_Used_Percent]
search = database_instance="$database_instance$" tag=database tag=performance connection_pool_used_percent=* | timechart eval(round(avg(connection_pool_used_percent), 2)) as "Connection Pool Used (%)"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Network_Bytes]
search = host="$host$" tag=performance tag=network (bytes_in=* OR bytes_out=*) | eval bytes_in = bytes_in/1024 | eval bytes_out = bytes_out/1024 | timechart eval(round(avg(bytes_in), 2)) as "Inbound (KB/s)" eval(round(avg(bytes_out), 2)) as "Outbound (KB/s)"
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

[DA-ITSI-DATABASE-Database_Instances_Events]
search = source="*" database_instance="$database_instance$" tag=database
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search